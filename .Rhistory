# AP2 - Projeto de Estat√≠stica e Machine Learning com StudentsPerformance
# ============================
# Pacotes
# ============================
pacotes <- c("dplyr", "ggplot2", "ggpubr", "nortest", "readr", "tidyr")
instalar <- pacotes[!(pacotes %in% installed.packages())]
if(length(instalar)) install.packages(instalar)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(nortest)
library(readr)
library(tidyr)
# ============================
# Leitura dos Dados
# ============================
df <- read_csv("StudentsPerformance.csv")
# Renomear colunas para facilitar
colnames(df) <- c("genero", "grupo_etnico", "educacao_pais", "almoco", "curso_preparatorio",
"nota_matematica", "nota_leitura", "nota_escrita")
# ============================
# Descri√ß√£o do Dataset
# ============================
cat("Dataset possui", nrow(df), "linhas e", ncol(df), "colunas.\n")
summary(df)
# ============================
# Quest√µes de Pesquisa
# ============================
# 1. Existe diferen√ßa de desempenho em matem√°tica entre g√™neros?
# 2. Curso preparat√≥rio influencia positivamente as notas?
# 3. Renda social (almoco) impacta o desempenho?
# 4. Grupos √©tnicos t√™m diferen√ßas estatisticamente significativas nas notas?
# ============================
# Visualiza√ß√£o Inicial
# ============================
g1 <- ggplot(df, aes(x = genero, y = nota_matematica, fill = genero)) +
geom_boxplot() + theme_minimal() + ggtitle("Notas de Matem√°tica por G√™nero")
g2 <- ggplot(df, aes(x = curso_preparatorio, y = nota_matematica, fill = curso_preparatorio)) +
geom_boxplot() + theme_minimal() + ggtitle("Notas de Matem√°tica por Curso Preparat√≥rio")
g3 <- ggplot(df, aes(x = grupo_etnico, y = nota_matematica, fill = grupo_etnico)) +
geom_boxplot() + theme_minimal() + ggtitle("Notas de Matem√°tica por Grupo √âtnico")
print(g1)
print(g2)
print(g3)
# ============================
# Testes Estat√≠sticos
# ============================
# 1. Teste t: genero x nota_matematica
teste_t_genero <- t.test(nota_matematica ~ genero, data = df)
print(teste_t_genero)
# 2. Teste t: curso_preparatorio x nota_matematica
teste_t_curso <- t.test(nota_matematica ~ curso_preparatorio, data = df)
print(teste_t_curso)
# 3. ANOVA: grupo_etnico x nota_matematica
teste_anova_grupo <- aov(nota_matematica ~ grupo_etnico, data = df)
summary(teste_anova_grupo)
# Post-hoc se ANOVA for significativa
if(summary(teste_anova_grupo)[[1]]$`Pr(>F)`[1] < 0.05) {
cat("\nPost-hoc Tukey para grupo √©tnico:\n")
print(TukeyHSD(teste_anova_grupo))
}
# 4. Teste de normalidade (para justificar uso de ANOVA)
lillie.test(df$nota_matematica)
# ============================
# Correla√ß√£o entre notas
# ============================
correlacoes <- df %>%
select(nota_matematica, nota_leitura, nota_escrita) %>%
cor()
print(correlacoes)
# ============================
# Exporta resumo para artigo
# ============================
write.csv(correlacoes, "correlacoes_notas.csv", row.names = TRUE)
write.csv(df, "students_cleaned.csv", row.names = FALSE)
# Gr√°ficos salvos manualmente via Export no RStudio ou ggsave se desejar
# ggsave("boxplot_genero.png", plot = g1)
# ggsave("boxplot_preparatorio.png", plot = g2)
# ggsave("boxplot_grupo.png", plot = g3)
# ============================
# Conclus√µes parciais para artigo:
# ============================
# - H√° diferen√ßas significativas por g√™nero (ver t-test)
# - Curso preparat√≥rio mostra melhoria significativa nas notas (p < 0.05)
# - Grupo √©tnico apresenta diferen√ßas estat√≠sticas nas m√©dias
# - As tr√™s notas (matem√°tica, leitura, escrita) possuem correla√ß√£o alta
cat("\nAn√°lises prontas para compor a se√ß√£o de resultados e discuss√£o do artigo.\n")
View(correlacoes)
View(df)
View(g1)
View(teste_anova_grupo)
# ============================
# AP2 - Estat√≠stica e Machine Learning com StudentsPerformance
# ============================
# ---- Pacotes ----
pacotes <- c("dplyr", "ggplot2", "ggpubr", "nortest", "readr", "tidyr")
instalar <- pacotes[!(pacotes %in% installed.packages())]
if(length(instalar)) install.packages(instalar)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(nortest)
library(readr)
library(tidyr)
# ---- Leitura e Pr√©-processamento ----
df <- read_csv("StudentsPerformance.csv")
colnames(df) <- c("genero", "grupo_etnico", "educacao_pais", "almoco", "curso_preparatorio",
"nota_matematica", "nota_leitura", "nota_escrita")
cat("Dataset possui", nrow(df), "linhas e", ncol(df), "colunas.\n")
summary(df)
# ---- Quest√µes de Pesquisa ----
# 1. Diferen√ßa de desempenho em matem√°tica entre g√™neros?
# 2. Curso preparat√≥rio influencia as notas?
# 3. Renda (almo√ßo) impacta o desempenho?
# 4. Grupos √©tnicos afetam notas?
# 5. N√≠vel educacional dos pais afeta desempenho?
# ---- Visualiza√ß√µes ----
g1 <- ggplot(df, aes(x = genero, y = nota_matematica, fill = genero)) +
geom_boxplot() + theme_minimal() + ggtitle("Notas de Matem√°tica por G√™nero")
g2 <- ggplot(df, aes(x = curso_preparatorio, y = nota_matematica, fill = curso_preparatorio)) +
geom_boxplot() + theme_minimal() + ggtitle("Notas por Curso Preparat√≥rio")
g3 <- ggplot(df, aes(x = grupo_etnico, y = nota_matematica, fill = grupo_etnico)) +
geom_boxplot() + theme_minimal() + ggtitle("Notas por Grupo √âtnico")
g4 <- ggplot(df, aes(x = educacao_pais, y = nota_matematica, fill = educacao_pais)) +
geom_boxplot() + theme_minimal() + ggtitle("Notas por N√≠vel de Educa√ß√£o dos Pais") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(g1)
print(g2)
print(g3)
print(g4)
# ---- Testes Estat√≠sticos ----
# Teste t: g√™nero
teste_t_genero <- t.test(nota_matematica ~ genero, data = df)
print(teste_t_genero)
# Teste t: curso preparat√≥rio
teste_t_curso <- t.test(nota_matematica ~ curso_preparatorio, data = df)
print(teste_t_curso)
# ANOVA: grupo √©tnico
teste_anova_grupo <- aov(nota_matematica ~ grupo_etnico, data = df)
print(summary(teste_anova_grupo))
if(summary(teste_anova_grupo)[[1]]$`Pr(>F)`[1] < 0.05) {
cat("\nPost-hoc Tukey para grupo √©tnico:\n")
print(TukeyHSD(teste_anova_grupo))
}
# ANOVA: n√≠vel de educa√ß√£o dos pais
teste_anova_educacao <- aov(nota_matematica ~ educacao_pais, data = df)
print(summary(teste_anova_educacao))
if(summary(teste_anova_educacao)[[1]]$`Pr(>F)`[1] < 0.05) {
cat("\nPost-hoc Tukey para n√≠vel de educa√ß√£o dos pais:\n")
print(TukeyHSD(teste_anova_educacao))
}
# Teste de normalidade
print(lillie.test(df$nota_matematica))
# ---- Correla√ß√£o entre Notas ----
correlacoes <- df %>%
select(nota_matematica, nota_leitura, nota_escrita) %>%
cor()
print(correlacoes)
# ---- Exporta√ß√£o para o Artigo ----
write.csv(correlacoes, "correlacoes_notas.csv", row.names = TRUE)
write.csv(df, "students_cleaned.csv", row.names = FALSE)
# ---- Conclus√µes Parciais ----
cat("\nüîé Conclus√µes:\n")
cat("- Diferen√ßa significativa entre g√™neros (p <", round(teste_t_genero$p.value, 4), ")\n")
cat("- Curso preparat√≥rio melhora desempenho (p <", round(teste_t_curso$p.value, 4), ")\n")
cat("- Grupo √©tnico influencia as notas (ANOVA p <", round(summary(teste_anova_grupo)[[1]]$`Pr(>F)`[1], 4), ")\n")
cat("- Educa√ß√£o dos pais tamb√©m influencia significativamente (ANOVA p <", round(summary(teste_anova_educacao)[[1]]$`Pr(>F)`[1], 4), ")\n")
cat("- Notas possuem alta correla√ß√£o entre si\n")
View(df)
# ============================
# AP2 - Estat√≠stica e Machine Learning com StudentsPerformance
# ============================
# ---- Pacotes ----
pacotes <- c("dplyr", "ggplot2", "ggpubr", "nortest", "readr", "tidyr")
instalar <- pacotes[!(pacotes %in% installed.packages())]
if(length(instalar)) install.packages(instalar)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(nortest)
library(readr)
library(tidyr)
# ---- Leitura e Pr√©-processamento ----
df <- read_csv("StudentsPerformance.csv")
colnames(df) <- c("genero", "grupo_etnico", "educacao_pais", "almoco", "curso_preparatorio",
"nota_matematica", "nota_leitura", "nota_escrita")
cat("Dataset possui", nrow(df), "linhas e", ncol(df), "colunas.\n")
summary(df)
# ---- Visualiza√ß√µes ----
g1 <- ggplot(df, aes(x = genero, y = nota_matematica, fill = genero)) +
geom_boxplot() + theme_minimal() + ggtitle("Notas de Matem√°tica por G√™nero")
g2 <- ggplot(df, aes(x = curso_preparatorio, y = nota_matematica, fill = curso_preparatorio)) +
geom_boxplot() + theme_minimal() + ggtitle("Notas por Curso Preparat√≥rio")
g3 <- ggplot(df, aes(x = grupo_etnico, y = nota_matematica, fill = grupo_etnico)) +
geom_boxplot() + theme_minimal() + ggtitle("Notas por Grupo √âtnico")
g4 <- ggplot(df, aes(x = educacao_pais, y = nota_matematica, fill = educacao_pais)) +
geom_boxplot() + theme_minimal() + ggtitle("Notas por N√≠vel de Educa√ß√£o dos Pais") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Novos gr√°ficos:
g5 <- ggplot(df, aes(x = genero, y = nota_leitura, fill = genero)) +
geom_boxplot() + theme_minimal() + ggtitle("Notas de Leitura por G√™nero")
g6 <- ggplot(df, aes(x = genero, y = nota_escrita, fill = genero)) +
geom_boxplot() + theme_minimal() + ggtitle("Notas de Escrita por G√™nero")
print(g1); print(g2); print(g3); print(g4); print(g5); print(g6)
# ---- Testes Estat√≠sticos ----
# G√™nero vs Notas
teste_t_genero_matematica <- t.test(nota_matematica ~ genero, data = df)
teste_t_genero_leitura    <- t.test(nota_leitura ~ genero, data = df)
teste_t_genero_escrita    <- t.test(nota_escrita ~ genero, data = df)
# Curso preparat√≥rio
teste_t_curso <- t.test(nota_matematica ~ curso_preparatorio, data = df)
# ANOVA Grupo √âtnico
teste_anova_grupo <- aov(nota_matematica ~ grupo_etnico, data = df)
# Post-hoc
if(summary(teste_anova_grupo)[[1]]$`Pr(>F)`[1] < 0.05) {
cat("\nPost-hoc Tukey para grupo √©tnico:\n")
print(TukeyHSD(teste_anova_grupo))
}
# ANOVA Educa√ß√£o dos Pais
teste_anova_educacao <- aov(nota_matematica ~ educacao_pais, data = df)
# Post-hoc
if(summary(teste_anova_educacao)[[1]]$`Pr(>F)`[1] < 0.05) {
cat("\nPost-hoc Tukey para n√≠vel de educa√ß√£o dos pais:\n")
print(TukeyHSD(teste_anova_educacao))
}
# Teste de normalidade
print(lillie.test(df$nota_matematica))
# ---- Correla√ß√£o entre Notas ----
correlacoes <- df %>%
select(nota_matematica, nota_leitura, nota_escrita) %>%
cor()
print(correlacoes)
# ---- Exporta√ß√£o para o Artigo ----
write.csv(correlacoes, "correlacoes_notas.csv", row.names = TRUE)
write.csv(df, "students_cleaned.csv", row.names = FALSE)
# ---- Conclus√µes Parciais ----
cat("\nüîé Conclus√µes:\n")
cat("- Diferen√ßa significativa em matem√°tica entre g√™neros (p <", round(teste_t_genero_matematica$p.value, 4), ")\n")
cat("- Diferen√ßa significativa em leitura entre g√™neros (p <", round(teste_t_genero_leitura$p.value, 4), ")\n")
cat("- Diferen√ßa significativa em escrita entre g√™neros (p <", round(teste_t_genero_escrita$p.value, 4), ")\n")
cat("- Curso preparat√≥rio melhora desempenho (p <", round(teste_t_curso$p.value, 4), ")\n")
cat("- Grupo √©tnico influencia as notas (ANOVA p <", round(summary(teste_anova_grupo)[[1]]$`Pr(>F)`[1], 4), ")\n")
cat("- Educa√ß√£o dos pais tamb√©m influencia significativamente (ANOVA p <", round(summary(teste_anova_educacao)[[1]]$`Pr(>F)`[1], 4), ")\n")
cat("- Notas possuem alta correla√ß√£o entre si\n")
# Pacotes
library(readr)
library(dplyr)
library(caret)
library(ranger)
# Leitura do dataset
df <- read_csv("StudentsPerformance.csv")
# Renomear colunas
colnames(df) <- c("genero", "grupo_etnico", "educacao_pais", "almoco", "curso_preparatorio",
"nota_matematica", "nota_leitura", "nota_escrita")
# Preparar base MVP
df_mvp <- df %>%
mutate(
media = (nota_matematica + nota_leitura + nota_escrita)/3,
aprovado = ifelse(media >= 60, "Aprovado", "Reprovado"),
aprovado = as.factor(aprovado)
) %>%
select(nota_matematica, nota_leitura, nota_escrita, genero, curso_preparatorio, aprovado)
# Ajustar tipos
df_mvp$genero <- as.factor(df_mvp$genero)
df_mvp$curso_preparatorio <- as.factor(df_mvp$curso_preparatorio)
# Treinar modelo
set.seed(42)
modelo_rf <- train(
aprovado ~ .,
data = df_mvp,
method = "ranger",
trControl = trainControl(method = "cv", number = 5)
)
# Salvar modelo
saveRDS(modelo_rf, "modelo_rf.rds")
shiny::runApp()
runApp()
shiny::runApp().
shiny::runApp()
# Pacotes
library(readr)
library(dplyr)
library(caret)
library(ranger)
# --- Preparar dados ---
df <- readr::read_csv("StudentsPerformance.csv")
colnames(df) <- c("genero", "grupo_etnico", "educacao_pais", "almoco", "curso_preparatorio",
"nota_matematica", "nota_leitura", "nota_escrita")
df_mvp <- df %>%
mutate(
media = (nota_matematica + nota_leitura + nota_escrita)/3,
aprovado = ifelse(media >= 60, "Aprovado", "Reprovado"),
aprovado = as.factor(aprovado)
) %>%
select(nota_matematica, nota_leitura, nota_escrita, genero, curso_preparatorio, aprovado)
df_mvp$genero <- as.factor(df_mvp$genero)
df_mvp$curso_preparatorio <- as.factor(df_mvp$curso_preparatorio)
# --- Treinar modelo com controle de pr√©-processamento ---
set.seed(42)
modelo_rf <- caret::train(
aprovado ~ nota_matematica + nota_leitura + nota_escrita + genero + curso_preparatorio,
data = df_mvp,
method = "ranger",
trControl = trainControl(method = "cv", number = 5),
preProcess = c("center", "scale")
)
# Salvar o modelo
saveRDS(modelo_rf, "modelo_rf.rds")
runApp()
runApp()
names(modelo_rf$trainingData)
runApp()
runApp()
str(modelo_rf$trainingData)
str(novo_dado)
runApp()
runApp()
runApp()
modelo_rf <- readRDS("modelo_rf.rds")
names(modelo_rf$trainingData)
shiny::runApp()
modelo_rf <- readRDS("modelo_rf.rds")
names(modelo_rf$trainingData)
str(modelo_rf$trainingData)
shiny::runApp()
shiny::runApp()
runApp('analise.R')
runApp('analise.R')
